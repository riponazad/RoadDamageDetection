Traceback (most recent call last):
  File "/cluster/home/mdaaz/RoadDamageDetection/scripts/train.py", line 108, in <module>
    model.train(data_loader_train, data_loader_val, args.num_epochs, optimizer, lr_scheduler)
  File "/cluster/home/mdaaz/RoadDamageDetection/scripts/model_zoo.py", line 76, in train
    output = self.model(imgs)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torchvision/models/detection/generalized_rcnn.py", line 101, in forward
    features = self.backbone(images.tensors)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torchvision/models/detection/backbone_utils.py", line 57, in forward
    x = self.body(x)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torchvision/models/_utils.py", line 69, in forward
    x = module(x)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/cluster/home/mdaaz/.conda/envs/object_detect/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.88 GiB (GPU 0; 15.90 GiB total capacity; 5.48 GiB already allocated; 9.25 GiB free; 5.77 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
